{
  "openapi": "3.0.0",
  "info": {
    "title": "Smart Appointment Booking System",
    "description": "API documentation for the Smart Appointment Booking System",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/user/create": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Payload is required",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/api/user/doctor/get": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "API route to fetch doctors with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (starts at 1)",
            "required": false,
            "default": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of doctors per page",
            "required": false,
            "default": 50,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/update/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "API route for updating a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to update"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/api/user/delete/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "API route for account deletion or user deletion.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user you want to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string",
            "example": "User Full name."
          },
          "email": {
            "type": "string",
            "example": "User Email"
          },
          "password": {
            "type": "string",
            "example": "hashed password"
          },
          "role": {
            "type": "string",
            "example": "doctor / patient"
          }
        }
      }
    }
  }
}